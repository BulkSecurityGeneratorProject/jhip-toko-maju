// JDL definition for application 'jhiptokomaju' generated with command 'jhipster export-jdl'

entity Customer {
  code String required,
  firstName String required,
  lastName String required,
  gender Gender required,
  phoneNumber String,
  address String
}
entity Product {
  barcode String required,
  name String required,
  unit UnitMeasure required,
  warehousePrice BigDecimal required min(0),
  unitPrice BigDecimal required min(0),
  sellingPrice BigDecimal required min(0),
  stock Integer required
}
entity Project {
  name String required,
  address String required,
  code String required unique minlength(4) maxlength(10)
}
entity Supplier {
  name String required,
  code String required,
  address String required,
  noTelp String required,
  bankAccount String,
  bankName String
}
entity CustomerProduct {
  specialPrice BigDecimal required min(0)
}
entity ProjectProduct {
  specialPrice BigDecimal required min(0)
}
entity SaleTransactions {
  noInvoice String,
  discount BigDecimal min(0),
  totalPayment BigDecimal required min(0),
  remainingPayment BigDecimal min(0),
  paid BigDecimal required min(0),
  saleDate Instant,
  settled Boolean required
}
entity SaleItem {
  quantity Integer min(0),
  totalPrice BigDecimal min(0)
}
entity SequenceNumber {
  type String required unique,
  nextValue Integer,
  incrementValue Integer
}
entity Invoice {
  noInvoice BigDecimal,
  customer String,
  totalPayment BigDecimal,
  remainingPayment BigDecimal,
  paid BigDecimal,
  saleDate Instant
}

enum Gender {
  MALE,
  FEMALE
}

enum UnitMeasure {
  KG,
  SAK,
  M
}

relationship OneToMany {
  Supplier{product} to Product{supplier(name)},
  Customer{product} to CustomerProduct{customer(firstName) required},
  Project{product} to ProjectProduct{project(name) required},
  SaleTransactions{items} to SaleItem{sale(noInvoice) required}
}
relationship ManyToOne {
  Project{customer(firstName) required} to Customer,
  CustomerProduct{product(name) required} to Product,
  ProjectProduct{product(name) required} to Product,
  SaleTransactions{customer(firstName) required} to Customer,
  SaleTransactions{creator(login) required} to User,
  SaleItem{product(name) required} to Product
}

dto Customer, Product, Project, Supplier, CustomerProduct, ProjectProduct, SaleTransactions, SaleItem with mapstruct
paginate Customer, Product, Project, Supplier with pagination
paginate CustomerProduct, ProjectProduct, SaleTransactions, SaleItem, Invoice with infinite-scroll
service Customer, Product, Project, Supplier, CustomerProduct, ProjectProduct, SaleTransactions, SaleItem with serviceImpl
search Customer, Product, Project, Supplier, CustomerProduct, ProjectProduct, SaleTransactions, SaleItem, SequenceNumber, Invoice with elasticsearch
filter Customer, Product, Project, Supplier, CustomerProduct, ProjectProduct, SaleTransactions, SaleItem
