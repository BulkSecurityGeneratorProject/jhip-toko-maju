entity Customer{
    code String required
	firstName String required,
    lastName String required,
    gender Gender required
    phoneNumber String,
    address String
}
enum Gender {
    MALE, FEMALE
}
enum UnitMeasure {
    KG, SAK, M
}
entity Project{
    name String required,
    address String required
}
entity Product{
    barcode String required,
    name String required,
    unit UnitMeasure required,
    warehousePrice BigDecimal required min(0),
    unitPrice BigDecimal required min(0),
    sellingPrice BigDecimal required min(0),
    stock Integer required
}
entity Supplier{
    name String required,
    code String required,
    address String required,
    noTelp String required,
    bankAccount String,
    bankName String
}
entity Project{
    name String required,
    address String required
}
// entity CustomerProduct{
//     specialPrice BigDecimal required min(0)
// }
// relationship OneToOne{
//     CustomerProduct{product(barcode)} to Product
// }
relationship OneToMany{
    // Customer{product} to CustomerProduct{customer(name)}
    Supplier to Product{supplier(name)}
}
// relationship ManyToOne{
//     CustomerProduct{customer(name)} to Customer
// }
// Set pagination options
// paginate CustomerProduct with infinite-scroll
paginate * with pagination //except CustomerProduct
// Use Data Transfert Objects (DTO)
dto * with mapstruct
// Set service options to all except few
service all with serviceImpl
filter Product, Customer, Project, Supplier
// Set an angular suffix
//angularSuffix * with ti
